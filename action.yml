name: 'Build using QPM and NDK'
description: 'Build a QPM package using NDK'
inputs:
  github_token:
    description: 'Github token'
    required: true
  workspace:
    description: 'Github workspace'
    required: true
outputs:
  libname:
    description: "Name of the created .so (includes extension)"
    value: ${{ steps.libname.outputs.NAME }}
  release-path:
    description: "Path to the release .so"
    value: ${{ steps.release-output.outputs.release-path }}
  debug-path:
    description: "Path to the debug .so"
    value: ${{ steps.debug-output.outputs.debug-path }}
runs:
  using: 'composite'
  steps:
    - name: Install Powershell
      run: sudo apt-get install -y powershell
    
    - name: Cache Android NDK
      id: cache-ndk
      uses: actions/cache@v2
      env:
        cache-name: cache-ndk
      with:
        path: ndk
        key: ${{ runner.os }}-${{ env.cache-name }}-1
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-1
      
    - name: Install Android NDK
      if: steps.cache-ndk.outputs.cache-hit != 'true'
      env:
        ndkname: android-ndk-r20
      run: |
        wget -q -O ndk.zip https://dl.google.com/android/repository/${ndkname}-linux-x86_64.zip
        unzip -q ndk.zip
        mv ${ndkname} ndk
      
    - name: Create ndkpath.txt
      run: |
        cd ndk
        pwd > ${{ inputs.workspace }}/ndkpath.txt
        
#     - name: Cache QPM
#       id: cache-qpm
#       uses: actions/cache@v2
#       env:
#         cache-name: cache-qpm
#       with:
#         path: QPM
#         key: ${{ runner.os }}-${{ env.cache-name }}-1
#         restore-keys: |
#           ${{ runner.os }}-${{ env.cache-name }}-1

    - name: Get QPM
      if: steps.cache-qpm.outputs.cache-hit != 'true'
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ inputs.github_token }}
        workflow: main.yml
        name: QPM-ubuntu-x64
        path: QPM
        repo: sc2ad/QuestPackageManager
        
#     - name: QPM Dependencies Cache
#       id: cache-qpm-deps
#       uses: actions/cache@v2
#       env:
#         cache-name: cache-qpm-deps
#       with:
#         path: ~/.config/QPM
#         key: ${{ runner.os }}-${{ env.cache-name }}
#         restore-keys: |
#           ${{ runner.os }}-${{ env.cache-name }}
      
    - name: QPM Restore
#       if: steps.cache-qpm-deps.outputs.cache-hit != 'true'
      run: |
        chmod +x ./QPM/QPM
        ./QPM/QPM restore
    - name: Build
      run: |
        cd ${{ inputs.workspace }}
        pwsh -Command ./build.ps1
    - name: Get Library Name
      id: libname
      run: |
        cd ./libs/arm64-v8a/
        pattern="${{ inputs.libname }}*.so"
        files=( $pattern )
        echo ::set-output name=NAME::"${files[0]}"
    - name: Output path to Release
      id: release-output
      run: |
        echo ::set-output name=release-path::"./libs/arm64-v8a/${{ steps.libname.outputs.NAME }}"
    - name: Output path to Debug
      id: debug-output
      run: |
        echo ::set-output name=debug-path::"./obj/local/arm64-v8a/${{ steps.libname.outputs.NAME }}"
